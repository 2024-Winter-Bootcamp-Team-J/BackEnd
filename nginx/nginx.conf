#Nginx 기본 이벤트 처리 설정 저의
events {
    #한 worker process 가 동시 처리 가능한 최대 연결 수
    #서버의 트래픽 처리 능력에 영향
    worker_connections 1024;
}

#HTTP 요청 처리 설정
http {
    #추가적인 Nginx 설정 파일 포함 - 개별 서버 블록 및 보안설정
    #include /etc/nginx/conf.d/*.conf;

    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    #upstream django {
        # Docker Compose의 서비스 이름 'web'을 사용하여 Django 컨테이너에 접근
        #server web:8000;
    #}

    #HTTP 요청 처리 위한 개별 서버 설정
    server {
        # 요청 수신 포트 위치
        listen 80;

        # 기본 서버 설정
        server_name _;

        #요청 경로 처리 방식 정의
        location / {
            #Docker Compose 의 서비스 이름 web 컨테이너의 8000포트로 전달
            proxy_pass http://web:8000;
            #리버스 프록시 설정시 백엔드 서버가 요청 정보 식별용 추가 헤더 ( 호스트이름 + 포트)
            proxy_set_header Host $host:$server_port;
            #클라이언트의 실제 IP
            proxy_set_header X-Real-IP $remote_addr;
            #클라이언트의 원래 IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #Http - Https 식별
            proxy_set_header X-Forwarded-Proto https;

            # 타임아웃 설정
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            send_timeout 60s;
        }

        # 정적 파일을 Nginx가 직접 처리하도록 설정
        #요청된 /static/경로 -> Docker Container /app/static/ 디렉토리로 매핑
        location /static/ {
            alias /code/static/;
        }

        # 미디어 파일을 Nginx가 직접 처리하도록 설정
        location /media/ {
            alias /code/media/;
        }
    }
}